{"version":3,"sources":["components/feedbackOptions.js","components/section.js","components/feedback.js","components/notification.js","components/statistics.js","App.js","reportWebVitals.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","name","onClick","Section","title","children","className","Feedback","increaseFeedback","Notification","message","Statistics","good","bad","neutral","countTotalFeedback","totalFeedbacks","Math","round","App","useState","setGood","setBad","setNeutral","statisticsProps","e","currentTarget","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NACe,SAASA,EAAT,GAA8C,IAAnBC,EAAkB,EAAlBA,gBAElC,OACI,gCACI,wBAAQC,KAAK,UAAUC,QAASF,EAAhC,qBACA,wBAAQC,KAAK,MAAMC,QAASF,EAA5B,iBACA,wBAAQC,KAAK,OAAOC,QAASF,EAA7B,sBCND,SAASG,EAAT,GAA8D,IAAD,IAA3CC,aAA2C,MAArC,cAAqC,EAAtBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,UAC5D,OACI,gCACI,6BACKF,IAEL,yBAASE,UAAWA,EAApB,SACKD,OCLF,SAASE,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,iBACjC,OACE,8BACE,cAACL,EAAD,CAASC,MAAM,0BAA0BE,UAAU,WAAnD,SACE,cAACP,EAAD,CAAiBC,gBAAiBQ,QCC3BC,MARf,YAAwC,IAAD,IAAfC,eAAe,MAAP,GAAO,EACnC,OACI,4BACCA,KCCM,SAASC,EAAT,GAA6C,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QACxCC,EAAqB,WACzB,OAAOH,EAAOC,EAAMC,GAOhBE,EAAiBD,IAEvB,OAAuB,IAAnBC,EACK,cAAC,EAAD,CAAcN,QAAQ,sBAG3B,eAACP,EAAD,CAASC,MAAM,aAAaE,UAAU,aAAtC,UACE,2CAAcQ,KACd,uCAAUD,KACV,yCAAYD,KAHd,UAIUI,EACR,uBALF,gBATKC,KAAKC,MAAON,EAAOG,IAAwB,MAAQ,EAgBtD,0BCrBO,SAASI,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBR,EADqB,KACfS,EADe,OAEND,mBAAS,GAFH,mBAErBP,EAFqB,KAEhBS,EAFgB,OAGEF,mBAAS,GAHX,mBAGrBN,EAHqB,KAGZS,EAHY,KAsBtBC,EAAkB,CACtBZ,KAAMA,EACNC,IAAKA,EACLC,QAASA,GAGX,OACE,gCACE,cAACP,EAAD,CAAUC,iBAzBW,SAAAiB,GAEvB,OADiBA,EAAEC,cAAXzB,MAEN,IAAK,OACHoB,GAAQ,SAAAM,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,MACHL,GAAO,SAAAK,GAAI,OAAIA,EAAO,KACtB,MACF,IAAK,UACHJ,GAAW,SAAAI,GAAI,OAAIA,EAAO,SAgB5B,cAAChB,EAAD,eAAgBa,OCpCtB,IAYeI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.232ebdc3.chunk.js","sourcesContent":["\nexport default function FeedbackOptions ({onLeaveFeedback}) {\n\n        return(\n            <div>\n                <button name=\"neutral\" onClick={onLeaveFeedback}>Neutral</button>\n                <button name=\"bad\" onClick={onLeaveFeedback}>Bad</button>\n                <button name=\"good\" onClick={onLeaveFeedback}>Good!</button> \n            </div>\n        )\n\n}","\nexport default function Section({title=\"Empty title\", children, className}) {\n    return (\n        <div>\n            <h2>\n                {title}\n            </h2>\n            <section className={className}>\n                {children}\n            </section>\n        </div>\n        \n    )\n}","import FeedbackOptions from './feedbackOptions';\nimport Section from './section';\n\nexport default function Feedback({ increaseFeedback }) {\n  return (\n    <div>\n      <Section title=\"Please leave a feedback\" className=\"feddback\">\n        <FeedbackOptions onLeaveFeedback={increaseFeedback} />\n      </Section>\n    </div>\n  );\n}\n","function Notification({ message=\"\" })  {\n    return(\n        <p>\n        {message}\n    </p>\n    )\n\n}\nexport default Notification","// import { useState } from 'react';\nimport Section from './section.js';\nimport Notification from './notification.js';\n\nexport default function Statistics({ good, bad, neutral }) {\n  const countTotalFeedback = () => {\n    return good + bad + neutral;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100) || 0;\n  };\n\n  const totalFeedbacks = countTotalFeedback();\n\n  if (totalFeedbacks === 0) {\n    return <Notification message=\"No feedback given\" />;\n  } else {\n    return (\n      <Section title=\"Statistics\" className=\"statistics\">\n        <div>Neutral {neutral}</div>\n        <div>Bad {bad}</div>\n        <div>Good! {good}</div>\n        Total: {totalFeedbacks}\n        <br />\n        Positive % : {countPositiveFeedbackPercentage()}\n        <br />\n      </Section>\n    );\n  }\n}\n","import './App.css';\nimport Feedback from './components/feedback.js';\nimport Statistics from './components/statistics.js';\nimport { useState } from 'react';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n\n  const increaseFeedback = e => {\n    const { name } = e.currentTarget;\n    switch (name) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const statisticsProps = {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n  };\n\n  return (\n    <div>\n      <Feedback increaseFeedback={increaseFeedback} />\n      <Statistics {...statisticsProps} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}